<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  P6Spy
  %%
  Copyright (C) 2013 P6Spy
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->


<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd">


  <changeSet id="customers-table" author="quintonm">
    <!-- generic table to be used by all tests -->
    <createTable tableName="customers">
      <column name="id" type="int"/>
      <column name="name" type="varchar(255)"/>
    </createTable>
    <loadData tableName="customers" file="testdata/customers.csv">
      <column name="id" type="numeric"/>
      <column name="name" type="string"/>
    </loadData>
  </changeSet>

  <changeSet id="contacts-table" author="quintonm">
    <!-- generic table to be used by all tests -->
    <createTable tableName="contacts">
      <column name="id" type="int"/>
      <column name="name" type="varchar(255)"/>
    </createTable>
    <loadData tableName="contacts" file="testdata/contacts.csv">
      <column name="id" type="numeric"/>
      <column name="name" type="string"/>
    </loadData>
  </changeSet>

<!--   <changeSet id="create-test-proc-h2" author="quintonm">
    used by P6TestCallableStatement
    <preConditions onFail="CONTINUE">
      <dbms type="H2"/>
    </preConditions>
    <createProcedure>
      CREATE ALIAS TEST_PROC AS $$ 
      int testProc(int param1, String param2) {
         return 2;
      } $$;      
    </createProcedure>
  </changeSet>
  
  <changeSet id="create-test-proc-oracle" author="quintonm">
    used by P6TestCallableStatement
    <preConditions onFail="CONTINUE">
      <dbms type="Oracle"/>
    </preConditions>
    <createProcedure>
      create or replace function test_proc(param1 number, param2 varchar2) 
      return number as
      begin
         return 2;
      end;      
    </createProcedure>
  </changeSet>
  
  <changeSet id="create-test-proc-mysql" author="quintonm">
    used by P6TestCallableStatement
    <preConditions onFail="CONTINUE">
      <dbms type="MySQL"/>
    </preConditions>
    liquibase does not drop stored procedures automatically
    <sql>
      drop function if exists test_proc
    </sql>
    <createProcedure>
      create function test_proc(param1 int, param2 varchar(100)) 
      returns int 
      begin
         return 2;
      end      
    </createProcedure>
  </changeSet>
  
  <changeSet id="create-sleep-proc" author="quintonm">
    used by P6TestOutage
    <preConditions onFail="CONTINUE">
      <dbms type="H2"/>
    </preConditions>
    <createProcedure>
      CREATE ALIAS SLEEP AS $$ 
      void sleep(long miliseconds) {
         try { 
               java.lang.Thread.sleep(miliseconds); 
         } catch (java.lang.InterruptedException e) {} 
      } $$;      
    </createProcedure>
  </changeSet>
 -->
</databaseChangeLog>